#############################################################################
# Makefile for building: forth
# Generated by qmake (3.0) (Qt 5.2.1)
# Project:  forth.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -spec linux-g++-64 CONFIG+=debug -o Makefile forth.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options


CC            = gcc
DEFINES       = -UNOREADLINE -UNOSEMAPHORE
GCCFLAGS      = -std=gnu99 -Werror -Wreturn-type -Wunused-function -Wmissing-prototypes
CFLAGS        = $(DEFINES) -m64 -pipe -g -fPIE $(GCCFLAGS) $(CDEBUGFLAGS)
INCPATH       = -I.
LINK          = gcc
LFLAGS        = -m64
LIBS          = -lreadline
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

HEADERS       = external.h
SOURCES       = forth.c external.c
OBJECTS       = forth.o external.o
QMAKE_TARGET  = forth
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = forth


first: all
####### Implicit rules

.SUFFIXES: .o .c

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

dont-know-what-this-is-for:
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

check: first

compiler_clean:

####### Compile

forth.o: defs.h external.h
external.o: defs.h external.h

