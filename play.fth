\ play.fth

\ FORTH play things

FORTH DEFINITIONS
VOCABULARY play IMMEDIATE play DEFINITIONS

: 1000-TIMES
    1000 0 DO I DROP J DROP LOOP
  ;

: 1MILLION-TIMES
    1000 0 DO 1000-TIMES LOOP
  ;

: 1BILLION-TIMES
    1000 0 DO 1MILLION-TIMES LOOP
  ;

R: (FACT)	( nd1\n2 ... nd3 )
    ?DUP IF
      DUP 1-
      >R S->D D* R>
      (FACT)
    THEN
  R;

: FACT		( n ... factnd )
    DUP 0< OVER 12 > OR 5 ?ERROR
    1. ROT (FACT)
  ;

R: (BIGFACT)	( nf1\n2 ... nf3 )
    ?DUP IF
      DUP 1-
      >R S->D D->F F* R>
      (BIGFACT)
    THEN
  R;

: BIGFACT	( n ... factnf )
    DUP 0< OVER 170 > OR 5 ?ERROR
    >R 1.0 R> (BIGFACT)
  ;

: DOES
    <BUILDS 99 ,
    DOES> ." I am DOES> "
      ." My first data item is: " ?
      CR
  ;

-1 CONSTANT CAT-FILENUM
250 $VARIABLE CAT-FILE-BUF
: CAT-FILE	( saddr ... )
    0 OPEN-FILE
    DUP 0< IF DROP OSERROR THEN
    ' CAT-FILENUM !
    BEGIN
      CAT-FILE-BUF DUP 1- C@ CAT-FILENUM READLINE-FILE
    0< NOT WHILE
      CAT-FILE-BUF COUNT TYPE CR
    REPEAT
    CAT-FILENUM CLOSE-FILE
  ;

250 $VARIABLE CP-FILENAME-FROM
-1 CONSTANT CP-FILENUM-FROM
250 $VARIABLE CP-FILENAME-TO
-1 CONSTANT CP-FILENUM-TO
250 $VARIABLE CP-FILE-BUF
: CP-FILE	( saddr ... )
    DUP COUNT CP-FILENAME-FROM $!
    COUNT CP-FILENAME-TO $! " -Copy" COUNT CP-FILENAME-TO $+
    CP-FILENAME-FROM 0 OPEN-FILE
    DUP 0< IF DROP OSERROR THEN
    ' CP-FILENUM-FROM !
    CP-FILENAME-TO 1 OPEN-FILE
    DUP 0< IF DROP OSERROR THEN
    ' CP-FILENUM-TO !
    BEGIN
      CP-FILE-BUF DUP 1- C@ CP-FILENUM-FROM READLINE-FILE
    0< NOT WHILE
      CP-FILE-BUF COUNT CP-FILENUM-TO WRITELINE-FILE
    REPEAT
    CP-FILENUM-TO CLOSE-FILE
    CP-FILENUM-FROM CLOSE-FILE
  ;

-1 CONSTANT SORT-FILENUM
250 $VARIABLE SORT-FILE-BUF
250 $VARIABLE SORT-PREV-LINE
250 $VARIABLE SORT-THIS-LINE
: SORT-FILE	( saddr ... )
    0 OPEN-FILE
    DUP 0< IF DROP OSERROR THEN
    ' SORT-FILENUM !
    0 SORT-PREV-LINE C!
    BEGIN
      SORT-THIS-LINE DUP 1- C@ 2DUP SWAP 1+ SWAP 0xFF FILL SWAP C!
      0. SORT-FILENUM SEEK-FILE
      BEGIN
        SORT-FILE-BUF DUP 1- C@ SORT-FILENUM READLINE-FILE
      0< NOT WHILE
        SORT-FILE-BUF SORT-THIS-LINE $CMP 0<
        SORT-FILE-BUF SORT-PREV-LINE $CMP 0>
        AND IF SORT-FILE-BUF COUNT SORT-THIS-LINE $! THEN
      REPEAT
    SORT-THIS-LINE C@ 250 = NOT WHILE
      SORT-THIS-LINE COUNT 2DUP SORT-PREV-LINE $!
      TYPE CR
    REPEAT
    SORT-FILENUM CLOSE-FILE
  ;
